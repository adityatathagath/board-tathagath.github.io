from flask import Flask, jsonify, render_template
import pandas as pd

app = Flask(__name__)

# Load and process the data
file_path = 'data.xlsx'  # Replace with your actual file path
data = pd.read_excel(file_path).set_index("Rank").T  # Transpose the data for easier processing

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/api/leaderboard')
def leaderboard():
    leaderboard_data = data[['Rank', 'Name', 'Total Score']].sort_values(by='Total Score', ascending=False)
    leaderboard_json = leaderboard_data.to_dict(orient='records')
    return jsonify(leaderboard_json)

@app.route('/api/insights')
def insights():
    assets = data.columns[2:-1]  # Select all asset columns
    insights_data = {
        "top_performers": [
            {"asset": asset, "top_scorer": data.loc[data[asset].idxmax(), 'Name'], "score": data[asset].max()}
            for asset in assets
        ],
        "consistent_scorer": data.loc[data['Total Score'].idxmax(), 'Name'],
        "asset_stats": [
            {
                "asset": asset,
                "average": data[asset].mean(),
                "max": data[asset].max(),
                "min": data[asset].min()
            }
            for asset in assets
        ]
    }
    return jsonify(insights_data)

@app.route('/api/chart-data')
def chart_data():
    top_10 = data.sort_values(by='Total Score', ascending=False).head(10)
    assets = data.columns[2:-1]
    chart_data = {
        "top_10_names": top_10['Name'].tolist(),
        "top_10_scores": top_10['Total Score'].tolist(),
        "assets": assets.tolist(),
        "asset_averages": [data[asset].mean() for asset in assets]
    }
    return jsonify(chart_data)

if __name__ == '__main__':
    app.run(debug=True)







<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <title>Ecodamus Insights</title>
    <style>
        body { background-color: #f4f4f4; }
        .barclays-blue { color: #00aeef; }
        .barclays-dark-blue { background-color: #00395d; }
    </style>
</head>
<body class="min-h-screen p-6">
    <div class="container mx-auto max-w-6xl bg-white shadow-lg rounded-lg p-6">
        <h1 class="text-center text-3xl barclays-blue font-bold mb-4">Ecodamus Insights</h1>

        <!-- Winner Section -->
        <div id="winner-section" class="text-center bg-gray-100 p-4 rounded-md mb-6"></div>

        <!-- Insights Section -->
        <div id="insights-section" class="mb-6"></div>

        <!-- Leaderboard -->
        <h2 class="text-2xl font-bold barclays-blue mb-4">üèÖ Leaderboard</h2>
        <div class="mb-4">
            <input type="text" id="search" placeholder="Search by name..." 
                   class="w-full p-2 border-2 border-barclays-blue rounded-md">
        </div>
        <table class="w-full text-left border-collapse table-auto">
            <thead class="bg-barclays-dark-blue text-white">
                <tr>
                    <th class="px-4 py-2">Rank</th>
                    <th class="px-4 py-2">Name</th>
                    <th class="px-4 py-2">Total Score</th>
                </tr>
            </thead>
            <tbody id="leaderboard"></tbody>
        </table>

        <!-- Charts -->
        <h2 class="text-2xl font-bold barclays-blue mt-6 mb-4">üìà Visualizations</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
                <h3 class="font-bold text-lg text-center">Top 10 Total Scores</h3>
                <canvas id="scoreChart"></canvas>
            </div>
            <div>
                <h3 class="font-bold text-lg text-center">Asset Average Scores</h3>
                <canvas id="averageChart"></canvas>
            </div>
        </div>
    </div>

    <!-- JavaScript -->
    <script>
        async function fetchLeaderboard(query = "") {
            const response = await fetch("/api/leaderboard");
            const data = await response.json();
            const filteredData = query
                ? data.filter(player => player.Name.toLowerCase().includes(query.toLowerCase()))
                : data;

            const leaderboardBody = document.getElementById("leaderboard");
            leaderboardBody.innerHTML = filteredData.slice(0, 10).map(player => `
                <tr class="border-b">
                    <td class="px-4 py-2">${player.Rank}</td>
                    <td class="px-4 py-2">${player.Name}</td>
                    <td class="px-4 py-2">${player["Total Score"]}</td>
                </tr>
            `).join('');
        }

        async function fetchInsights() {
            const response = await fetch("/api/insights");
            const insights = await response.json();

            const winnerSection = document.getElementById("winner-section");
            winnerSection.innerHTML = `
                <h2 class="text-xl font-bold barclays-blue">üèÜ Winner: ${insights.consistent_scorer}</h2>
            `;

            const insightsSection = document.getElementById("insights-section");
            insightsSection.innerHTML = `
                <h3 class="mt-4 text-xl font-bold">Top Performers by Asset</h3>
                <ul class="list-disc pl-5">
                    ${insights.top_performers.map(item => `
                        <li>${item.asset} - ${item.top_scorer}: ${item.score}</li>
                    `).join('')}
                </ul>
                <h3 class="mt-4 text-xl font-bold">Asset Statistics</h3>
                <ul class="list-disc pl-5">
                    ${insights.asset_stats.map(stat => `
                        <li>${stat.asset} - Average: ${stat.average}, Max: ${stat.max}, Min: ${stat.min}</li>
                    `).join('')}
                </ul>
            `;
        }

        async function fetchChartData() {
            const response = await fetch("/api/chart-data");
            const data = await response.json();

            new Chart(document.getElementById("scoreChart"), {
                type: 'bar',
                data: {
                    labels: data.top_10_names,
                    datasets: [{
                        label: 'Total Score',
                        data: data.top_10_scores,
                        backgroundColor: '#00aeef',
                    }]
                }
            });

            new Chart(document.getElementById("averageChart"), {
                type: 'line',
                data: {
                    labels: data.assets,
                    datasets: [{
                        label: 'Average Score',
                        data: data.asset_averages,
                        borderColor: '#00395d',
                        fill: false
                    }]
                }
            });
        }

        document.getElementById("search").addEventListener("input", event => {
            fetchLeaderboard(event.target.value);
        });

        fetchLeaderboard();
        fetchInsights();
        fetchChartData();
    </script>
</body>
</html>
